buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'

// Put Fabric plugin after Android plugin
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    // FIX: Default interface methods are only supported starting with Android N (--min-api 24)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion project.properties.compileSdkVersion
    buildToolsVersion project.properties.buildToolsVersion
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        minSdkVersion project.properties.minSdkVersion
        targetSdkVersion project.properties.targetSdkVersion
        applicationId "com.liskovsoft.videomanager"
        versionCode 669
        versionName "6.17.89"
        multiDexEnabled = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
    }

    //signingConfigs {
    //    release {
    //        storeFile file("../android-upd2.keystore")
    //        storePassword project.KEYSTORE_PASSWORD
    //        keyAlias 'private'
    //        keyPassword project.KEYSTORE_PASSWORD
    //    }
    //}

    buildTypes {
        // NOTE: to enable Crashlytics add fabric.properties file with your api keys
        Boolean crashEnabled = file('fabric.properties').exists()

        debug {
            buildConfigField "boolean", "CRASHLYTICS_ENABLED", crashEnabled.toString()
            ext.enableCrashlytics = crashEnabled
        }

        release {
            buildConfigField "boolean", "CRASHLYTICS_ENABLED", crashEnabled.toString()
            ext.enableCrashlytics = crashEnabled

            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //signingConfig signingConfigs.release
        }
    }

    // gradle 4.6 migration: disable dimensions mechanism
    // more: https://proandroiddev.com/advanced-android-flavors-part-4-a-new-version-fc2ad80c01bb
    flavorDimensions "default"

    productFlavors {
        orig {
            matchingFallbacks = ['lite']
        }
        V720 {
            matchingFallbacks = ['lite']
            versionCode 9999 // disable auto-update
        }
        V1080 {
            matchingFallbacks = ['lite']
            versionCode 9999 // disable auto-update
        }
        Vkids {
            matchingFallbacks = ['lite']
            applicationIdSuffix ".kids"
        }
        Vlive {
            matchingFallbacks = ['lite']
            applicationIdSuffix ".live"
        }
        Vadnotam {
            matchingFallbacks = ['lite']
            applicationId "com.adnotam.smartyoutubetv"
        }
        Vbolshoetv {
            // vermax uhd250x/300x 1GB ram
            matchingFallbacks = ['lite']
            versionCode 10051
        }
    }

    // naming example: SmartYouTubeTV_Xwalk_v6.8.12_r.apk
    // https://stackoverflow.com/questions/18332474/how-to-set-versionname-in-apk-filename-using-gradle
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "SYTV"
            def flavor = variant.productFlavors[-1].name.capitalize()
            def buildType = variant.variantData.variantConfiguration.buildType.name.take(1)
            def version = variant.versionName

            def newApkName = sprintf("%s_%s_v%s_%s.apk", [project, flavor, version, buildType])

            // gradle 4.6 migration
            output.outputFileName = new File(newApkName)
        }
    }

    lintOptions {
        abortOnError true
        lintConfig rootProject.file('lint.xml')
    }
}

dependencies {
    androidTestImplementation(project.properties.espressoCoreVersion, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation project.properties.junitVersion
    // example: assertThat(newEmployees).hasSize(6).contains(frodo, sam);
    testImplementation project.properties.assertJVersion
    testImplementation project.properties.robolectricVersion
    testImplementation project.properties.robolectricMultidexVersion
    testImplementation project.properties.robolectricSupportV4Version
    testImplementation project.properties.commonsIOVersion

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Common routines
    testImplementation project(path: ':sharedtests')
    implementation project(path: ':sharedutils')
    origImplementation project(path: ':leanbackassistant')

    implementation project(path: ':common')

    implementation project(path: ':browser')

    implementation project(path: ':exoplayeractivity')

    implementation project(path: ':appupdatechecker')

    implementation(project.properties.crashlyticsVersion) { // see top part of this file
        transitive = true
    }
    
    implementation project.properties.appCompatXVersion
    implementation project.properties.mediaXVersion // exoplayer fix
    implementation project.properties.recycleViewXVersion // exoplayer fix
    implementation project.properties.constraintLayoutXVersion

    implementation project.properties.gsonVersion
    implementation project.properties.jsonPathVersion

    implementation project.properties.nanoHttpdVersion
    implementation project.properties.voiceOverlayVersion

    implementation project.properties.okhttpVersion
    implementation project.properties.ottoVersion

    implementation project.properties.diskLruCacheVersion
}
